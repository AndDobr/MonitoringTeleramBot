import threading
import time

from telebot import types, TeleBot
from telebot.types import *
from sqlite3 import connect

bot = TeleBot(token='secret')

keyb1 = types.ReplyKeyboardMarkup()
keyb1.add(KeyboardButton('–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∞ üòé'))

keyb2 = types.ReplyKeyboardMarkup(row_width=5)
keyb2.add(KeyboardButton('–ê—Ä—Ç–∏–∫—É–ª'), KeyboardButton('–ù–∞–∑–≤–∞–Ω–∏–µ'),KeyboardButton('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'))
keyb2.add(KeyboardButton('–ù–∞–∑–∞–¥'))

keyb3 = ReplyKeyboardMarkup(row_width=5)
keyb3.add(KeyboardButton('–ù–∞–∑–∞–¥'))

@bot.message_handler(commands=['start'])
def start(message):

    """
    conn = connect("data.db")
    id = message.from_user.id
    cursor = conn.execute("SELECT * FROM users WHERE Id = ?", [id])
    if not cursor.fetchall():
        conn.execute("INSERT INTO users VALUES (?)", [id])
        conn.commit()
    """

    bot.send_message(message.from_user.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name} —Ä–∞–¥—ã –í–∞—Å –≤–∏–¥–µ—Ç—å", reply_markup=keyb1)
    markup = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton('–î–µ—Ç–∞–ª—å 1', callback_data='1')
    button2 = types.InlineKeyboardButton('–î–µ—Ç–∞–ª—å 2', callback_data='2')
    button3 = types.InlineKeyboardButton('–î–µ—Ç–∞–ª—å 3', callback_data='3')
    button4 = types.InlineKeyboardButton('–î–µ—Ç–∞–ª—å 4', callback_data='4')
    button5 = types.InlineKeyboardButton('–î–µ—Ç–∞–ª—å 5', callback_data='5')
    button6 = types.InlineKeyboardButton('–î–µ—Ç–∞–ª—å 6', callback_data='6')
    button7 = types.InlineKeyboardButton('–î–µ—Ç–∞–ª—å 7', callback_data='7')
    markup.row(button1, button2, button3)
    markup.row(button4, button5, button6, button7)
    photo = open('photo.jpg', 'rb')
    bot.send_photo(message.chat.id, photo, reply_markup=markup)

@bot.message_handler(commands=['help'])
def start(message):
    bot.send_message(message.from_user.id, "–§–æ—Ç–æ:", reply_markup=keyb1)
    markup = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton('–î–µ—Ç–∞–ª—å 1', callback_data='1')
    button2 = types.InlineKeyboardButton('–î–µ—Ç–∞–ª—å 2', callback_data='2')
    button3 = types.InlineKeyboardButton('–î–µ—Ç–∞–ª—å 3', callback_data='3')
    button4 = types.InlineKeyboardButton('–î–µ—Ç–∞–ª—å 4', callback_data='4')
    button5 = types.InlineKeyboardButton('–î–µ—Ç–∞–ª—å 5', callback_data='5')
    button6 = types.InlineKeyboardButton('–î–µ—Ç–∞–ª—å 6', callback_data='6')
    button7 = types.InlineKeyboardButton('–î–µ—Ç–∞–ª—å 7', callback_data='7')
    markup.row(button1, button2, button3)
    markup.row(button4, button5, button6, button7)
    photo = open('photo.jpg', 'rb')
    bot.send_photo(message.chat.id, photo, reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def query_handler(call):
    conn = connect("data.db")
    bot.answer_callback_query(callback_query_id=call.id)
    cursor = conn.execute("SELECT * FROM details WHERE Ide = ?", [call.data])
    answer = cursor.fetchall()
    print(answer)
    bot.send_message(call.message.chat.id, f"‚úÖ{str(answer[0][0])}. " + '–ê—Ä—Ç–∏–∫—É–ª: ' + str(answer[0][1]) + '; –ù–∞–∑–≤–∞–Ω–∏–µ: ' + str(answer[0][2]) + '; –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ' + str(answer[0][3]) + '; –ü—Ä–æ—á–Ω–æ—Å—Ç—å: ' + str(answer[0][4]))

@bot.message_handler(content_types=['text'])
def process_message(message):
    if message.text == '–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∞ üòé':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å')
        bot.register_next_step_handler(message, prov)
    else:
        bot.send_message(message.chat.id, "–í–≤–µ–¥—ë–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑", reply_markup=keyb1)

def save_art(message, mess):  # message.text
    if str(message.text) == '–ù–∞–∑–∞–¥':
        bot.send_message(message.chat.id, '–í—ã –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã', reply_markup=keyb1)
    else:
        conn = connect("data.db")
        cursor = conn.execute("UPDATE details SET Art = ? WHERE Ide = ? ", [message.text, mess])
        bot.send_message(message.chat.id, '–ê—Ä—Ç–∏–∫—É–ª –æ–±–Ω–æ–≤–ª–µ–Ω ', reply_markup=keyb1)
        conn.commit()

def save_name(message, mess):  # message.text
    if str(message.text) == '–ù–∞–∑–∞–¥':
        bot.send_message(message.chat.id, '–í—ã –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã', reply_markup=keyb1)
    else:
        conn = connect("data.db")
        cursor = conn.execute("UPDATE details SET Name = ? WHERE Ide = ? ", [message.text, mess])
        bot.send_message(message.chat.id, '–ò–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ ', reply_markup=keyb1)
        conn.commit()  # desired

def save_col(message, mess):  # message.text
    if str(message.text) == '–ù–∞–∑–∞–¥':
        bot.send_message(message.chat.id, '–í—ã –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã', reply_markup=keyb1)
    else:
        conn = connect("data.db")
        cursor = conn.execute("UPDATE details SET Col = ? WHERE Ide = ? ", [message.text, mess])
        bot.send_message(message.chat.id, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ ', reply_markup=keyb1)
        conn.commit()  # desired

def save_numb(message):  # message.text
    string = message.text
    if str(message.text) == '–ù–∞–∑–∞–¥':
        bot.send_message(message.chat.id, '–í—ã –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã', reply_markup=keyb1)
    elif string.isdigit() == True and int(message.text) < 8:
        bot.send_message(message.chat.id, f'–í—ã–±–µ—Ä–µ—Ç–µ —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏ ‚Ññ{message.text}', reply_markup=keyb2)
        bot.register_next_step_handler(message, help, message.text)
    else:
        bot.send_message(message.chat.id,f'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –Ω–æ–º–µ—Ä {message.text}')

def prov(message):
    if message.text == "reg12345":
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ—Ç–∞–ª–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–π', reply_markup=keyb3)
        bot.register_next_step_handler(message, save_numb)
    else:
        bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å')
def help(message, num):
    if str(message.text) == '–ù–∞–∑–∞–¥':
        bot.send_message(message.chat.id, '–í—ã –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã', reply_markup=keyb1)
    elif message.text == '–ê—Ä—Ç–∏–∫—É–ª':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –Ω–æ–≤—ã–π –∞—Ä—Ç–∏–∫—É–ª –¥–ª—è —ç—Ç–æ–π –¥–µ—Ç–∞–ª–∏')
        bot.register_next_step_handler(message, save_art, num)
    elif message.text == '–ù–∞–∑–≤–∞–Ω–∏–µ':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —ç—Ç–æ–π –¥–µ—Ç–∞–ª–∏')
        bot.register_next_step_handler(message, save_name, num)
    elif message.text == '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —ç—Ç–æ–π –¥–µ—Ç–∞–ª–∏')
        bot.register_next_step_handler(message, save_col, num)

"""
def updater():
    while True:
        try:
            conn = connect("data.db")  # –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å, args –≤–º–µ—Å—Ç–æ form, —Ç–∫ —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞ - GET
            art = conn.execute("SELECT Art FROM details")
            tab_art = art.fetchall()
            rep = conn.execute("SELECT Repair FROM details")
            tab_rep = rep.fetchall()
            col = conn.execute("SELECT Col FROM details")
            tab_col = col.fetchall()
            id = conn.execute("SELECT Id FROM users")
            tab_id = rep.fetchall()
            for i in range(len(tab_art)):
                conn = connect("data.db")
                conn.execute("UPDATE details SET Repair = ? WHERE Art = ? ", [int(tab_rep[i][0]) - 1, tab_art[i][0]])
                conn.commit()
                if int(tab_rep[i][0]) < 52:
                    for a in range(len(tab_id)):  # tab_id[i][0]
                        conn = connect("data.db")
                        bot.send_message(tab_id[i][0], f'–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º {tab_art[i][0]} —Å–ª–æ–º–∞–Ω–∞')
                if int(tab_rep[i][0]) < 2:
                    for a in range(len(tab_id)):  # tab_id[i][0]
                        conn = connect("data.db")
                        bot.send_message(tab_id[a][0], f'–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º {tab_art[i][0]} —Å—Ç–∞–ª–æ –º–µ—Ç–∞–ª–ª–æ–ª–æ–º–æ–º')
                        conn.execute("UPDATE details SET Col = ? WHERE Art = ? ",
                                     [int(tab_col[i][0]) - 1, tab_art[i][0]])
                        conn.commit()

        except Exception as e:
            print("error", e)
        time.sleep(600)

t = threading.Thread(target=updater)
t.start()
"""

bot.infinity_polling()
